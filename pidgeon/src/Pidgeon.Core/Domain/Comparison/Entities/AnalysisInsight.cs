// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

using System.Text.Json.Serialization;

namespace Pidgeon.Core.Domain.Comparison.Entities;

/// <summary>
/// Represents an analytical insight about message differences.
/// Can be generated by algorithmic analysis, local AI, or cloud AI.
/// </summary>
public record AnalysisInsight
{
    /// <summary>
    /// Unique identifier for this insight.
    /// </summary>
    [JsonPropertyName("id")]
    public string Id { get; init; } = Guid.NewGuid().ToString();
    
    /// <summary>
    /// Type of insight provided.
    /// </summary>
    [JsonPropertyName("insightType")]
    public InsightType InsightType { get; init; }
    
    /// <summary>
    /// Brief title of the insight.
    /// </summary>
    [JsonPropertyName("title")]
    public string Title { get; init; } = string.Empty;
    
    /// <summary>
    /// Detailed description of the insight.
    /// </summary>
    [JsonPropertyName("description")]
    public string Description { get; init; } = string.Empty;
    
    /// <summary>
    /// Field paths this insight relates to.
    /// </summary>
    [JsonPropertyName("relatedFields")]
    public List<string> RelatedFields { get; init; } = new();
    
    /// <summary>
    /// Confidence level of this insight (0.0 to 1.0).
    /// </summary>
    [JsonPropertyName("confidence")]
    public double Confidence { get; init; }
    
    /// <summary>
    /// Severity/impact level of this insight.
    /// </summary>
    [JsonPropertyName("severity")]
    public InsightSeverity Severity { get; init; }
    
    /// <summary>
    /// Category of healthcare concern this relates to.
    /// </summary>
    [JsonPropertyName("healthcareCategory")]
    public HealthcareCategory? HealthcareCategory { get; init; }
    
    /// <summary>
    /// Specific recommended action to address this insight.
    /// </summary>
    [JsonPropertyName("recommendedAction")]
    public string RecommendedAction { get; init; } = string.Empty;
    
    /// <summary>
    /// Code snippet or example fix.
    /// </summary>
    [JsonPropertyName("exampleFix")]
    public string ExampleFix { get; init; } = string.Empty;
    
    /// <summary>
    /// Links to relevant documentation or standards.
    /// </summary>
    [JsonPropertyName("referenceLinks")]
    public List<string> ReferenceLinks { get; init; } = new();
    
    /// <summary>
    /// Source that generated this insight.
    /// </summary>
    [JsonPropertyName("analysisSource")]
    public AnalysisSource AnalysisSource { get; init; } = new();
    
    /// <summary>
    /// Tags for categorization and filtering.
    /// </summary>
    [JsonPropertyName("tags")]
    public List<string> Tags { get; init; } = new();
    
    /// <summary>
    /// Additional insight metadata.
    /// </summary>
    [JsonPropertyName("metadata")]
    public Dictionary<string, string> Metadata { get; init; } = new();
}

/// <summary>
/// Types of insights that can be generated.
/// </summary>
public enum InsightType
{
    /// <summary>
    /// Root cause analysis of why differences occurred.
    /// </summary>
    RootCauseAnalysis,
    
    /// <summary>
    /// Pattern recognition insight.
    /// </summary>
    PatternRecognition,
    
    /// <summary>
    /// Vendor-specific behavior explanation.
    /// </summary>
    VendorBehavior,
    
    /// <summary>
    /// Standards compliance issue.
    /// </summary>
    ComplianceIssue,
    
    /// <summary>
    /// Data quality concern.
    /// </summary>
    DataQuality,
    
    /// <summary>
    /// Integration configuration problem.
    /// </summary>
    ConfigurationIssue,
    
    /// <summary>
    /// Workflow or process insight.
    /// </summary>
    WorkflowInsight,
    
    /// <summary>
    /// Security or privacy concern.
    /// </summary>
    SecurityInsight,
    
    /// <summary>
    /// Performance impact analysis.
    /// </summary>
    PerformanceImpact,
    
    /// <summary>
    /// Best practice recommendation.
    /// </summary>
    BestPractice
}

/// <summary>
/// Severity levels for analysis insights.
/// </summary>
public enum InsightSeverity
{
    /// <summary>
    /// Informational insight for knowledge.
    /// </summary>
    Informational,
    
    /// <summary>
    /// Low impact, optional improvement.
    /// </summary>
    Low,
    
    /// <summary>
    /// Medium impact, should be addressed.
    /// </summary>
    Medium,
    
    /// <summary>
    /// High impact, should be fixed soon.
    /// </summary>
    High,
    
    /// <summary>
    /// Critical impact, immediate attention required.
    /// </summary>
    Critical
}

/// <summary>
/// Healthcare-specific categories for insights.
/// </summary>
public enum HealthcareCategory
{
    /// <summary>
    /// Patient identification and demographics.
    /// </summary>
    PatientIdentification,
    
    /// <summary>
    /// Clinical data and observations.
    /// </summary>
    ClinicalData,
    
    /// <summary>
    /// Medication and pharmacy information.
    /// </summary>
    Medication,
    
    /// <summary>
    /// Laboratory results and diagnostics.
    /// </summary>
    Laboratory,
    
    /// <summary>
    /// Administrative and billing information.
    /// </summary>
    Administrative,
    
    /// <summary>
    /// Encounter and visit information.
    /// </summary>
    Encounter,
    
    /// <summary>
    /// Provider and organization data.
    /// </summary>
    Provider,
    
    /// <summary>
    /// Insurance and coverage information.
    /// </summary>
    Insurance,
    
    /// <summary>
    /// Care coordination and referrals.
    /// </summary>
    CareCoordination,
    
    /// <summary>
    /// Quality measures and reporting.
    /// </summary>
    QualityMeasures
}

/// <summary>
/// Information about the source of an analysis insight.
/// </summary>
public record AnalysisSource
{
    /// <summary>
    /// Type of analysis that generated this insight.
    /// </summary>
    [JsonPropertyName("sourceType")]
    public AnalysisSourceType SourceType { get; init; }
    
    /// <summary>
    /// Name or identifier of the analysis engine.
    /// </summary>
    [JsonPropertyName("engineName")]
    public string EngineName { get; init; } = string.Empty;
    
    /// <summary>
    /// Version of the analysis engine.
    /// </summary>
    [JsonPropertyName("version")]
    public string Version { get; init; } = string.Empty;
    
    /// <summary>
    /// Model or algorithm used for analysis.
    /// </summary>
    [JsonPropertyName("model")]
    public string Model { get; init; } = string.Empty;
    
    /// <summary>
    /// Processing time for this insight.
    /// </summary>
    [JsonPropertyName("processingTime")]
    public TimeSpan ProcessingTime { get; init; }
    
    /// <summary>
    /// Whether this was processed locally or via API.
    /// </summary>
    [JsonPropertyName("isLocal")]
    public bool IsLocal { get; init; } = true;
}

/// <summary>
/// Types of analysis sources.
/// </summary>
public enum AnalysisSourceType
{
    /// <summary>
    /// Rule-based algorithmic analysis.
    /// </summary>
    Algorithmic,
    
    /// <summary>
    /// Local AI/ML model analysis.
    /// </summary>
    LocalAI,
    
    /// <summary>
    /// Cloud AI/ML service analysis.
    /// </summary>
    CloudAI,
    
    /// <summary>
    /// Hybrid algorithmic and AI analysis.
    /// </summary>
    Hybrid,
    
    /// <summary>
    /// User-provided or manual analysis.
    /// </summary>
    Manual
}